name: Deploy Backend to Cloud Run

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'docker-compose.yml'
      - '.github/workflows/backend-deploy.yml'
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

env:
  REGION: us-central1
  REPOSITORY: libreria
  SERVICE_NAME: libreria-backend
  IMAGE_NAME: backend

jobs:
  build-and-deploy:
    name: Build, Push, and Deploy
    runs-on: ubuntu-latest
    concurrency:
      group: backend-cloud-run
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          install_components: 'beta'

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: Build and Push Docker image
        id: build
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          IMAGE_URI="${{ env.REGION }}-docker.pkg.dev/${PROJECT_ID}/${{ env.REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_OUTPUT
          docker build -t "$IMAGE_URI" -f backend/Dockerfile ./backend
          docker push "$IMAGE_URI"

      - name: Deploy to Cloud Run
        env:
          PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          DJANGO_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          CLOUD_SQL_CONNECTION_NAME: ${{ secrets.CLOUD_SQL_CONNECTION_NAME }}
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
        run: |
          IMAGE_URI=${{ steps.build.outputs.IMAGE_URI }}
          gcloud run deploy "${{ env.SERVICE_NAME }}" \
            --image "$IMAGE_URI" \
            --region "${{ env.REGION }}" \
            --platform managed \
            --allow-unauthenticated \
            --add-cloudsql-instances "$CLOUD_SQL_CONNECTION_NAME" \
            --memory 512Mi \
            --cpu 1 \
            --max-instances 3 \
            --set-env-vars "DEBUG=False,SECRET_KEY=$DJANGO_SECRET_KEY,DB_NAME=$DB_NAME,DB_USER=$DB_USER,DB_PASSWORD=$DB_PASSWORD,DB_HOST=$DB_HOST,ALLOWED_HOSTS=$ALLOWED_HOSTS"

      - name: Show service URL
        run: |
          gcloud run services describe "${{ env.SERVICE_NAME }}" --region "${{ env.REGION }}" --format='value(status.url)'
