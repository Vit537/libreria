# Cloud Build configuration for Google Cloud
# Puedes usar este archivo como alternativa a GitHub Actions

steps:
  # Build Backend
  - name: 'gcr.io/cloud-builders/docker'
    args: 
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/libreria/backend:$SHORT_SHA'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/libreria/backend:latest'
      - './backend'
    id: 'build-backend'

  # Build Frontend
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/libreria/frontend:$SHORT_SHA'
      - '-t'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/libreria/frontend:latest'
      - '--build-arg'
      - 'NEXT_PUBLIC_API_URL=${_BACKEND_URL}'
      - './frontend'
    id: 'build-frontend'

  # Push Backend
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/libreria/backend:$SHORT_SHA'
    id: 'push-backend'

  # Push Backend Latest
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/libreria/backend:latest'
    id: 'push-backend-latest'

  # Push Frontend
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/libreria/frontend:$SHORT_SHA'
    id: 'push-frontend'

  # Push Frontend Latest
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/libreria/frontend:latest'
    id: 'push-frontend-latest'

  # Deploy Backend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'libreria-backend'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/libreria/backend:$SHORT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'DEBUG=False,SECRET_KEY=${_DJANGO_SECRET_KEY},DB_NAME=${_DB_NAME},DB_USER=${_DB_USER},DB_PASSWORD=${_DB_PASSWORD},DB_HOST=${_DB_HOST},ALLOWED_HOSTS=${_ALLOWED_HOSTS}'
      - '--add-cloudsql-instances'
      - '${_CLOUD_SQL_CONNECTION}'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
    id: 'deploy-backend'

  # Deploy Frontend to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'libreria-frontend'
      - '--image'
      - '${_REGION}-docker.pkg.dev/$PROJECT_ID/libreria/frontend:$SHORT_SHA'
      - '--region'
      - '${_REGION}'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'NEXT_PUBLIC_API_URL=${_BACKEND_URL}'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
    id: 'deploy-frontend'

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

substitutions:
  _REGION: 'us-central1'
  _BACKEND_URL: 'https://libreria-backend-xxxx.run.app'
  _DJANGO_SECRET_KEY: 'your-secret-key'
  _DB_NAME: 'libreria_db'
  _DB_USER: 'libreria_user'
  _DB_PASSWORD: 'your-password'
  _DB_HOST: '/cloudsql/PROJECT_ID:REGION:INSTANCE'
  _CLOUD_SQL_CONNECTION: 'PROJECT_ID:REGION:INSTANCE'
  _ALLOWED_HOSTS: 'your-backend-url.run.app,your-frontend-url.run.app'

images:
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/libreria/backend:$SHORT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/libreria/backend:latest'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/libreria/frontend:$SHORT_SHA'
  - '${_REGION}-docker.pkg.dev/$PROJECT_ID/libreria/frontend:latest'

timeout: '1800s'
