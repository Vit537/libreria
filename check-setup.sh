#!/bin/bash

# Script para verificar que todo est√° listo antes del deploy

echo "üîç Verificando configuraci√≥n del proyecto..."

# Verificar archivos Docker
echo ""
echo "üì¶ Verificando archivos Docker..."
if [ -f "backend/Dockerfile" ]; then
    echo "‚úÖ backend/Dockerfile existe"
else
    echo "‚ùå backend/Dockerfile no encontrado"
fi

if [ -f "frontend/Dockerfile" ]; then
    echo "‚úÖ frontend/Dockerfile existe"
else
    echo "‚ùå frontend/Dockerfile no encontrado"
fi

if [ -f "docker-compose.yml" ]; then
    echo "‚úÖ docker-compose.yml existe"
else
    echo "‚ùå docker-compose.yml no encontrado"
fi

# Verificar archivos de configuraci√≥n
echo ""
echo "‚öôÔ∏è Verificando archivos de configuraci√≥n..."
if [ -f ".env.example" ]; then
    echo "‚úÖ .env.example existe"
else
    echo "‚ùå .env.example no encontrado"
fi

if [ -f ".gitignore" ]; then
    echo "‚úÖ .gitignore existe"
else
    echo "‚ùå .gitignore no encontrado"
fi

# Verificar GitHub Actions
echo ""
echo "üöÄ Verificando GitHub Actions..."
if [ -f ".github/workflows/deploy-to-gcp.yml" ]; then
    echo "‚úÖ GitHub Actions workflow existe"
else
    echo "‚ùå GitHub Actions workflow no encontrado"
fi

# Verificar dependencias del backend
echo ""
echo "üêç Verificando dependencias del backend..."
if [ -f "backend/requirements.txt" ]; then
    echo "‚úÖ requirements.txt existe"
    if grep -q "gunicorn" backend/requirements.txt; then
        echo "‚úÖ gunicorn est√° en requirements.txt"
    else
        echo "‚ùå gunicorn no encontrado en requirements.txt"
    fi
    if grep -q "whitenoise" backend/requirements.txt; then
        echo "‚úÖ whitenoise est√° en requirements.txt"
    else
        echo "‚ùå whitenoise no encontrado en requirements.txt"
    fi
else
    echo "‚ùå requirements.txt no encontrado"
fi

# Verificar configuraci√≥n del frontend
echo ""
echo "‚öõÔ∏è Verificando configuraci√≥n del frontend..."
if [ -f "frontend/next.config.ts" ]; then
    echo "‚úÖ next.config.ts existe"
    if grep -q "standalone" frontend/next.config.ts; then
        echo "‚úÖ output: 'standalone' configurado"
    else
        echo "‚ö†Ô∏è output: 'standalone' no encontrado (necesario para Docker)"
    fi
else
    echo "‚ùå next.config.ts no encontrado"
fi

# Verificar git
echo ""
echo "üìù Verificando Git..."
if [ -d ".git" ]; then
    echo "‚úÖ Repositorio Git inicializado"
    
    # Verificar archivos sin commit
    if [ -n "$(git status --porcelain)" ]; then
        echo "‚ö†Ô∏è Hay archivos sin commit"
        echo "   Ejecuta: git add . && git commit -m 'Setup for Cloud Run deployment'"
    else
        echo "‚úÖ Todos los archivos est√°n commiteados"
    fi
else
    echo "‚ùå Repositorio Git no inicializado"
    echo "   Ejecuta: git init"
fi

# Resumen
echo ""
echo "============================================"
echo "üìã RESUMEN"
echo "============================================"
echo ""
echo "Pr√≥ximos pasos:"
echo ""
echo "1. Crear archivo .env basado en .env.example"
echo "2. Probar localmente con: docker-compose up --build"
echo "3. Configurar Google Cloud (ver DEPLOYMENT.md)"
echo "4. Configurar GitHub Secrets (ver README.md)"
echo "5. Push a GitHub para activar el deployment"
echo ""
echo "Para m√°s informaci√≥n, consulta:"
echo "  - README.md: Documentaci√≥n general"
echo "  - DEPLOYMENT.md: Gu√≠a de deployment paso a paso"
echo ""
